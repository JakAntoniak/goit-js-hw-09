{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAClBD,SAASC,cAAc,UAE/BC,iBAAiB,SAASC,IAClCA,EAAEC,iBAIJ,WACE,MAAMC,EAAaN,EAAKO,SAASC,MAC3BC,EAAYT,EAAKO,SAASG,KAC1BC,EAAcX,EAAKO,SAASK,OAE5BC,EAAQC,OAAOR,EAAWS,OAC1BL,EAAOI,OAAOL,EAAUM,OACxBH,EAASE,OAAOH,EAAYI,QAE9BF,EAAQ,GAAKH,EAAO,GAAKE,EAAS,IACpCI,EAAAlB,GAASmB,OAAOC,QAAQ,uCAG1B,SAASC,EAAcC,EAAUZ,GAC/B,MAAMa,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,CAAEL,SAAUA,EAAUZ,MAAOA,IAErCkB,EAAO,CAAEN,SAAUA,EAAUZ,MAAOA,GAAQ,GAE7CA,EAAM,G,CAKb,IAAK,IAAIoB,EAAI,EAAGA,EAAIhB,EAAQgB,IAC1BT,EAAcS,EAAI,EAAGf,EAAQe,EAAIlB,GAC9BmB,MAAK,EAACT,SAAEA,EAAQZ,MAAEA,MACjBQ,EAAAlB,GAASmB,OAAOa,QACd,uBAAqBV,QAAiBZ,MAAU,IAGnDuB,OAAM,EAACX,SAAEA,EAAQZ,MAAEA,MAClBQ,EAAAlB,GAASmB,OAAOC,QACd,sBAAoBE,QAAeZ,MAAU,G,CAvCrDwB,EAAa","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst submitBtn = document.querySelector('button');\n\nsubmitBtn.addEventListener('click', e => {\n  e.preventDefault();\n  newPromises();\n});\n\nfunction newPromises() {\n  const delayInput = form.elements.delay;\n  const delayStep = form.elements.step;\n  const amountInput = form.elements.amount;\n\n  const delay = Number(delayInput.value);\n  const step = Number(delayStep.value);\n  const amount = Number(amountInput.value);\n\n  if (delay < 0 || step < 0 || amount < 0) {\n    Notiflix.Notify.failure(`Please select values greater than 0`);\n  }\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position: position, delay: delay });\n        } else {\n          reject({ position: position, delay: delay });\n        }\n      }, delay);\n    });\n    return promise;\n  }\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay + i * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","addEventListener","e","preventDefault","delayInput","elements","delay","delayStep","step","amountInput","amount","delay1","Number","value","$parcel$interopDefault","Notify","failure","createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","i","then","success","catch","$47d4ff9957288465$var$newPromises"],"version":3,"file":"03-promises.ca494835.js.map"}